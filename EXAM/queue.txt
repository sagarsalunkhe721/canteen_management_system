#include<iostream>


#ifndef __QUEUE__
#define __QUEUE__
using namespace std;

template<typename T>
class Queue{
private:
        int size;
        int first;
        int last;
        T *store;
public:
        Queue(){
        }

        Queue(int size){
                this->first=0;
                this->last=0;
                this->size=size;
                this->store=new T[size];
        }

        bool isFull(){
                if(last>=size)
                        return 1;
                return 0;
        }

        bool isEmpty(){
                if(first==last)
                        return 1;
                return 0;
        }
        void enqueue( T data){
                if(isFull()){
                        cout<<"queue is full";
                        return;
                }
                store[last]=data;
                last++;
        }
        T dequeue(){
                if(isEmpty()){
                        cout<<"queue is empty";
                }
                T data=store[first];
                first++;

                if(first==last){
                        first=last=0;
                }
                return data;
        }
};
#endif
